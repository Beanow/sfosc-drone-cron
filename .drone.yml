kind: pipeline
name: update-preview

clone:
  disable: true

steps:
  - name: clone
    image: docker:git
    commands:
      - git clone --depth 1 https://github.com/sfosc/sfosc.git source
      - git clone --depth 1 https://github.com/sfosc/preview.git target

  - name: check-for-updates
    image: docker:git
    commands:
      - >
        echo "Source SHA = $(git -C source rev-parse --verify HEAD)";
        echo "Target SHA = $(cat target/.HEAD)";
        if [ -f target/.HEAD ] && [ "$(git -C source rev-parse --verify HEAD)" == "$(cat target/.HEAD)" ]; then
          echo "Already up to date" && sh -c "exit 1";
        else
          echo "Should deploy a new build";
        fi

  - name: build
    image: klakegg/hugo:0.55.6
    environment:
      HUGO_ENV: production
    commands:
      - config="$([ -f 'source/config.preview.toml' ] && echo 'config.preview.toml' || echo 'config.toml')"
      - echo "Using config file = $config"
      - >
        hugo
        -s ./source
        -d ../target
        --config $config

  - name: commit-and-push
    image: docker:git
    environment:
      SSH_DEPLOY_KEY:
        from_secret: SSH_DEPLOY_KEY
    commands:
      # Store the secret deploy key.
      - mkdir -p ~/.ssh && echo "$SSH_DEPLOY_KEY" > ~/.ssh/id_rsa && chmod 0600 ~/.ssh/id_rsa
      # Track the SHA we've built from.
      - echo "$(git -C source rev-parse --verify HEAD)" > target/.HEAD
      - cd target
      - git config core.sshCommand 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
      - git config user.email "bot@sfosc.org"
      - git config user.name "Deployment Bot"
      - git add --all
      - git commit -m "Rebuilding site `date`"
      - git push git@github.com:sfosc/preview.git master

trigger:
  branch:
    - master
